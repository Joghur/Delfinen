/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package delfinen.presentation;

import delfinen.Controller;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.accessibility.AccessibleContext;
import javax.swing.JCheckBox;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author martin b.
 */
public class DelfinGUI extends javax.swing.JFrame {

    Font FONT_NOTOSANS_PLAIN_12 = new Font("notosans", Font.PLAIN, 12);
    Font FONT_NOTOSANS_BOLD_12 = new Font("notosans", Font.BOLD, 12);
    Font FONT_NOTOSANS_ITALIC_12 = new Font("notosans", Font.ITALIC, 12);
    Font FONT_NOTOSANS_BOLD_ITALIC_12 = new Font("notosans", Font.BOLD + Font.ITALIC, 12);
    ArrayList<JCheckBox> discipliner = new ArrayList<>();

    /**
     * Creates new form DelfinGUI
     */
    public DelfinGUI() {
        initComponents();
        //Int checkboxes
        discipliner.add(checkBoxDisciplinBryst);
        discipliner.add(checkBoxDisciplinButterfly);
        discipliner.add(checkBoxDisciplinCrawl);
        discipliner.add(checkBoxDisciplinRygcrawl);
//        checkBoxDisciplinBryst.setSelected(false);
//        checkBoxDisciplinButterfly.setSelected(false);
//        checkBoxDisciplinCrawl.setSelected(false);
//        checkBoxDisciplinRygcrawl.setSelected(false);

        //init textfields
        textFieldEmail.setBackground(Color.white);
        textFieldAdresse.setBackground(Color.white);
        textFieldAlder.setBackground(Color.white);
        textFieldEmail.setBackground(Color.white);
        textFieldID.setBackground(Color.white);
        textFieldNavn.setBackground(Color.white);
        textFieldTelefon.setBackground(Color.white);
        textPaneMedlemsInfo.setBackground(Color.white);
//        textFieldEmail.setText("");
//        textFieldAdresse.setText("");
//        textFieldAlder.setText("");
//        textFieldEmail.setText("");
//        textFieldID.setText("");
//        textFieldNavn.setText("");
//        textFieldTelefon.setText("");
//        textPaneMedlemsInfo.setText("");

        comboBoxTrainedBy.removeAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMain = new javax.swing.JPanel();
        panelMembers = new javax.swing.JPanel();
        buttonNewMember = new javax.swing.JButton();
        panelMedlemsData = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldTelefon = new javax.swing.JTextField();
        textFieldAlder = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        textFieldEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textFieldAdresse = new javax.swing.JTextField();
        textFieldNavn = new javax.swing.JTextField();
        comboBoxMotionistKonkurrence = new javax.swing.JComboBox<>();
        panelDisciplin = new javax.swing.JPanel();
        checkBoxDisciplinBryst = new javax.swing.JCheckBox();
        checkBoxDisciplinButterfly = new javax.swing.JCheckBox();
        checkBoxDisciplinCrawl = new javax.swing.JCheckBox();
        checkBoxDisciplinRygcrawl = new javax.swing.JCheckBox();
        comboBoxStatus = new javax.swing.JComboBox<>();
        checkBoxTrainer = new javax.swing.JCheckBox();
        comboBoxTrainedBy = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPaneMedlemsInfo = new javax.swing.JTextPane();
        labelDelfinIcon = new javax.swing.JLabel();
        buttonSearchMember = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        labelMemberPhoto = new javax.swing.JLabel();
        panelAbout = new javax.swing.JPanel();
        panelLogo = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        buttonClose = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        panelAccount = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        panelResults = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileClose = new javax.swing.JMenuItem();
        menuSystem = new javax.swing.JMenu();
        menuSystemAccount = new javax.swing.JMenuItem();
        menuSystemMembers = new javax.swing.JMenuItem();
        menuSystemResults = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuHelpAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelMain.setLayout(new java.awt.CardLayout());

        buttonNewMember.setText("Nyt/ændre medlem");
        buttonNewMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewMemberActionPerformed(evt);
            }
        });

        panelMedlemsData.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelMedlemsData.setMaximumSize(new java.awt.Dimension(595, 226));
        panelMedlemsData.setMinimumSize(new java.awt.Dimension(595, 226));

        jLabel7.setText("Alder");

        jLabel3.setText("Status");

        textFieldTelefon.setText("25854578");
        textFieldTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldTelefonActionPerformed(evt);
            }
        });

        textFieldAlder.setText("23");
        textFieldAlder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAlderActionPerformed(evt);
            }
        });

        jLabel2.setText("Navn");

        textFieldID.setText("1");
        textFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldIDActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        textFieldEmail.setText("lm@delfinen.dk");
        textFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldEmailActionPerformed(evt);
            }
        });

        jLabel6.setText("Adresse");

        jLabel5.setText("Telefon");

        jLabel4.setText("Email");

        textFieldAdresse.setText("Ligustervænget 23, 2756 Liguster");
        textFieldAdresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAdresseActionPerformed(evt);
            }
        });

        textFieldNavn.setText("Lars Emil");
        textFieldNavn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNavnActionPerformed(evt);
            }
        });

        comboBoxMotionistKonkurrence.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Motionist", "Konkurrencesvømmer" }));
        comboBoxMotionistKonkurrence.setSelectedIndex(1);
        comboBoxMotionistKonkurrence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMotionistKonkurrenceActionPerformed(evt);
            }
        });

        checkBoxDisciplinBryst.setText("Brystsvømning");

        checkBoxDisciplinButterfly.setSelected(true);
        checkBoxDisciplinButterfly.setText("Butterfly");

        checkBoxDisciplinCrawl.setText("Crawl");

        checkBoxDisciplinRygcrawl.setSelected(true);
        checkBoxDisciplinRygcrawl.setText("Rygcrawl");

        javax.swing.GroupLayout panelDisciplinLayout = new javax.swing.GroupLayout(panelDisciplin);
        panelDisciplin.setLayout(panelDisciplinLayout);
        panelDisciplinLayout.setHorizontalGroup(
            panelDisciplinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDisciplinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDisciplinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxDisciplinButterfly)
                    .addComponent(checkBoxDisciplinRygcrawl)
                    .addComponent(checkBoxDisciplinCrawl)
                    .addComponent(checkBoxDisciplinBryst))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDisciplinLayout.setVerticalGroup(
            panelDisciplinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDisciplinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkBoxDisciplinButterfly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxDisciplinCrawl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxDisciplinRygcrawl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxDisciplinBryst)
                .addContainerGap())
        );

        comboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aktiv", "Passiv" }));
        comboBoxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxStatusActionPerformed(evt);
            }
        });

        checkBoxTrainer.setText("Træner");
        checkBoxTrainer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxTrainerActionPerformed(evt);
            }
        });

        comboBoxTrainedBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "The Hoff", "Nodil Pedersen" }));
        comboBoxTrainedBy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboBoxTrainedByFocusGained(evt);
            }
        });
        comboBoxTrainedBy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboBoxTrainedByMousePressed(evt);
            }
        });
        comboBoxTrainedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTrainedByActionPerformed(evt);
            }
        });

        jLabel13.setText("Trænet af:");

        javax.swing.GroupLayout panelMedlemsDataLayout = new javax.swing.GroupLayout(panelMedlemsData);
        panelMedlemsData.setLayout(panelMedlemsDataLayout);
        panelMedlemsDataLayout.setHorizontalGroup(
            panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMedlemsDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMedlemsDataLayout.createSequentialGroup()
                        .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldNavn, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(panelDisciplin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMedlemsDataLayout.createSequentialGroup()
                        .addComponent(textFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addGap(7, 7, 7)
                        .addComponent(textFieldAlder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelMedlemsDataLayout.createSequentialGroup()
                                .addComponent(checkBoxTrainer)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxTrainedBy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelMedlemsDataLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(comboBoxMotionistKonkurrence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelMedlemsDataLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textFieldAlder, textFieldID});

        panelMedlemsDataLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textFieldAdresse, textFieldEmail, textFieldNavn, textFieldTelefon});

        panelMedlemsDataLayout.setVerticalGroup(
            panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMedlemsDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxTrainer)
                    .addComponent(comboBoxTrainedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(textFieldAlder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(comboBoxMotionistKonkurrence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMedlemsDataLayout.createSequentialGroup()
                        .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textFieldNavn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(textFieldAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelMedlemsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(panelDisciplin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        textPaneMedlemsInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.gray, java.awt.Color.white));
        jScrollPane1.setViewportView(textPaneMedlemsInfo);

        labelDelfinIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/delfin.jpg"))); // NOI18N
        labelDelfinIcon.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonSearchMember.setText("Søg medlem");
        buttonSearchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchMemberActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Noto Sans", 0, 36)); // NOI18N
        jLabel9.setText("Medlemmer");

        labelMemberPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/1.jpg"))); // NOI18N

        javax.swing.GroupLayout panelMembersLayout = new javax.swing.GroupLayout(panelMembers);
        panelMembers.setLayout(panelMembersLayout);
        panelMembersLayout.setHorizontalGroup(
            panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMembersLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelMembersLayout.createSequentialGroup()
                        .addComponent(labelDelfinIcon)
                        .addGap(18, 18, 18)
                        .addGroup(panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonSearchMember, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(buttonNewMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(panelMedlemsData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelMembersLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelMemberPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelMembersLayout.setVerticalGroup(
            panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMembersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMembersLayout.createSequentialGroup()
                        .addGroup(panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelMemberPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(panelMembersLayout.createSequentialGroup()
                        .addGroup(panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMembersLayout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(buttonNewMember, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonSearchMember, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 29, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMembersLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(labelDelfinIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(panelMedlemsData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        panelMain.add(panelMembers, "panelMembers");

        panelLogo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel10.setText("BBW software 2018");

        buttonClose.setText("Close");
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/files/BBW.png"))); // NOI18N

        javax.swing.GroupLayout panelLogoLayout = new javax.swing.GroupLayout(panelLogo);
        panelLogo.setLayout(panelLogoLayout);
        panelLogoLayout.setHorizontalGroup(
            panelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLogoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonClose)
                .addGap(190, 190, 190))
            .addGroup(panelLogoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLogoLayout.setVerticalGroup(
            panelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLogoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClose)
                    .addComponent(jLabel10))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelAboutLayout = new javax.swing.GroupLayout(panelAbout);
        panelAbout.setLayout(panelAboutLayout);
        panelAboutLayout.setHorizontalGroup(
            panelAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAboutLayout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(panelLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(178, 178, 178))
        );
        panelAboutLayout.setVerticalGroup(
            panelAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAboutLayout.createSequentialGroup()
                .addContainerGap(148, Short.MAX_VALUE)
                .addComponent(panelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        panelMain.add(panelAbout, "panelAbout");

        jLabel12.setText("Kassen");

        javax.swing.GroupLayout panelAccountLayout = new javax.swing.GroupLayout(panelAccount);
        panelAccount.setLayout(panelAccountLayout);
        panelAccountLayout.setHorizontalGroup(
            panelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccountLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jLabel12)
                .addContainerGap(722, Short.MAX_VALUE))
        );
        panelAccountLayout.setVerticalGroup(
            panelAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAccountLayout.createSequentialGroup()
                .addContainerGap(283, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(182, 182, 182))
        );

        panelMain.add(panelAccount, "panelAccount");

        jLabel11.setText("Results");

        javax.swing.GroupLayout panelResultsLayout = new javax.swing.GroupLayout(panelResults);
        panelResults.setLayout(panelResultsLayout);
        panelResultsLayout.setHorizontalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultsLayout.createSequentialGroup()
                .addGap(347, 347, 347)
                .addComponent(jLabel11)
                .addContainerGap(630, Short.MAX_VALUE))
        );
        panelResultsLayout.setVerticalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultsLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel11)
                .addContainerGap(265, Short.MAX_VALUE))
        );

        panelMain.add(panelResults, "panelResults");

        menuFile.setText("File");

        menuFileClose.setText("Close");
        menuFileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileCloseActionPerformed(evt);
            }
        });
        menuFile.add(menuFileClose);

        menuBar.add(menuFile);

        menuSystem.setText("System");

        menuSystemAccount.setText("Kassen");
        menuSystemAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSystemAccountActionPerformed(evt);
            }
        });
        menuSystem.add(menuSystemAccount);

        menuSystemMembers.setText("Medlemmer");
        menuSystemMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSystemMembersActionPerformed(evt);
            }
        });
        menuSystem.add(menuSystemMembers);

        menuSystemResults.setText("Resultater");
        menuSystemResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSystemResultsActionPerformed(evt);
            }
        });
        menuSystem.add(menuSystemResults);

        menuBar.add(menuSystem);

        menuHelp.setText("Help");

        menuHelpAbout.setText("About");
        menuHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHelpAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuHelpAbout);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public String getStatus() {
        return comboBoxStatus.getSelectedItem().toString();
    }

    public ArrayList<String> getDisciplin() {
        ArrayList<String> disc = new ArrayList<>();
        for (JCheckBox jCheckbox : discipliner) {
            if (jCheckbox.isSelected()) {
                disc.add(jCheckbox.getText());
            }
        }
        return disc;
    }

    public boolean getDisciplinBryst() {
        return checkBoxDisciplinBryst.isSelected();
    }

    public boolean getDisciplinButterfly() {
        return checkBoxDisciplinButterfly.isSelected();
    }

    public boolean getDisciplinCrawl() {
        return checkBoxDisciplinCrawl.isSelected();
    }

    public boolean getDisciplinRygcrawl() {
        return checkBoxDisciplinRygcrawl.isSelected();
    }

    public String getMotionKonkurrence() {
        return comboBoxMotionistKonkurrence.getSelectedItem().toString();
    }

    public String getMedlemsInfo() {
        if (textPaneMedlemsInfo.getBackground() == Color.white) {
            return textPaneMedlemsInfo.getText();
        } else {
            return "";
        }
    }

    public String getAdresse() {
        if (textFieldAdresse.getBackground() == Color.white) {
            return textFieldAdresse.getText();
        } else {
            return "";
        }
    }

    public int getAlder() {
        if (textFieldAlder.getBackground() == Color.white) {
            return Integer.parseInt(textFieldAlder.getText());
        } else {
            return 0;
        }
    }

    public String getEmail() {
        if (textFieldEmail.getBackground() == Color.white) {
            return textFieldEmail.getText();
        } else {
            return "";
        }
    }

    public int getID() {
        if (textFieldID.getBackground() == Color.white) {
            return Integer.parseInt(textFieldID.getText());
        } else {
            return 0;
        }
    }

    public String getNavn() {
        if (textFieldNavn.getBackground() == Color.white) {
            return textFieldNavn.getText();
        } else {
            return "";
        }
    }

    public int getTelefon() {
        if (textFieldTelefon.getBackground() == Color.white) {
            return Integer.parseInt(textFieldTelefon.getText());
        } else {
            return 0;
        }
    }

    public boolean getTrainer() {
        return checkBoxTrainer.isSelected();
    }

    public String getTrainedBy() {
        return comboBoxTrainedBy.getSelectedItem().toString();
    }

    public int getMemberPhoto() {
        try {
            int g = Integer.parseInt(labelMemberPhoto.getIcon()
                    .toString().split("files")[1].substring(1).split(".jpg")[0]);
            return g;
        } catch (NumberFormatException e) {
            System.out.println(e);
            return 0;
        }
    }

    public void setDisciplinCheckBoxes(ArrayList<String> disciplinList) {
        for (String disciplin : disciplinList) {
            switch (disciplin) {
                case ("Brystsvømning"):
                    checkBoxDisciplinBryst.setSelected(true);
                    break;

                case ("Butterfly"):
                    checkBoxDisciplinButterfly.setSelected(true);
                    break;

                case ("Crawl"):
                    checkBoxDisciplinCrawl.setSelected(true);
                    break;

                default:
                    checkBoxDisciplinRygcrawl.setSelected(true);
                    break;
            }
        }
    }

    public void setDisciplinBryst(boolean disciplinBryst) {
        this.checkBoxDisciplinBryst.setSelected(disciplinBryst);
    }

    public void setDisciplinButterfly(boolean disciplinButterfly) {
        this.checkBoxDisciplinButterfly.setSelected(disciplinButterfly);
    }

    public void setDisciplinCrawl(boolean disciplinCrawl) {
        this.checkBoxDisciplinCrawl.setSelected(disciplinCrawl);
    }

    public void setDisciplinRygcrawl(boolean disciplinRygcrawl) {
        this.checkBoxDisciplinRygcrawl.setSelected(disciplinRygcrawl);
    }

    public void setMotionistKonkurrence(String MotionistKonkurrence) {
        this.comboBoxMotionistKonkurrence.setSelectedItem(MotionistKonkurrence);
    }

    public void setStatus(String statusAktivPassiv) {
        this.comboBoxStatus.setSelectedItem(statusAktivPassiv);
    }

    public void setAdresse(String textFieldAdresse) {
        this.textFieldAdresse.setText(textFieldAdresse);
    }

    public void setAlder(int textFieldAlder) {
        this.textFieldAlder.setText(String.valueOf(textFieldAlder));
    }

    public void setEmail(String textFieldEmail) {
        this.textFieldEmail.setText(textFieldEmail);
    }

    public void setMemberPhoto(int ID) {
        this.labelMemberPhoto.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/files/" + String.valueOf(ID) + ".jpg")));
        this.labelDelfinIcon.updateUI();
    }

    public void setID(int textFieldID) {
        this.textFieldID.setText(String.valueOf(textFieldID));
    }

    public void setNavn(String textFieldNavn) {
        this.textFieldNavn.setText(textFieldNavn);
    }

    public void setTelefon(int textFieldTelefon) {
        this.textFieldTelefon.setText(String.valueOf(textFieldTelefon));
    }

    public void setMedlemsInfo(String textPaneMedlemsInfo) {
        displayPlainBlack(textPaneMedlemsInfo);
    }

    public void setTrainer(boolean checkBoxTrainer) {
        this.checkBoxTrainer.setSelected(checkBoxTrainer);
    }

    public void setTrainedBy(List<String> comboBoxTrainedBy) {
        this.comboBoxTrainedBy.removeAllItems();
        for (String string : comboBoxTrainedBy) {
            this.comboBoxTrainedBy.addItem(string);
        }
    }

    public static int getEXIT_ON_CLOSE() {
        return EXIT_ON_CLOSE;
    }

    @Override
    public AccessibleContext getAccessibleContext() {
        return accessibleContext;
    }

    private void textFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldIDActionPerformed
        // input check, Regex for ID
        regexUserInfoBackGroundColorSet("^\\d+$", textFieldID,
                "ID skal være et tal større end 0");
    }//GEN-LAST:event_textFieldIDActionPerformed

    private void menuFileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuFileCloseActionPerformed

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        CardLayout card = (CardLayout) panelMain.getLayout();
        card.show(panelMain, "panelMembers");
    }//GEN-LAST:event_buttonCloseActionPerformed

    private void menuHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHelpAboutActionPerformed
        CardLayout card = (CardLayout) panelMain.getLayout();
        card.show(panelMain, "panelAbout");
    }//GEN-LAST:event_menuHelpAboutActionPerformed

    private void comboBoxMotionistKonkurrenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMotionistKonkurrenceActionPerformed
        if (comboBoxMotionistKonkurrence.getSelectedItem().equals("Konkurrencesvømmer")) {
            panelDisciplin.setVisible(true);
            comboBoxTrainedBy.setVisible(true);
        } else {
            panelDisciplin.setVisible(false);
            comboBoxTrainedBy.setVisible(false);
        }
    }//GEN-LAST:event_comboBoxMotionistKonkurrenceActionPerformed

    private void textFieldTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldTelefonActionPerformed
        // input check, Regex for Telephone
        regexUserInfoBackGroundColorSet("^\\d+$", textFieldTelefon,
                "Telefonnummer skal være i formatet: 12345678");
    }//GEN-LAST:event_textFieldTelefonActionPerformed

    private void textFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldEmailActionPerformed
        // input check, Regex for email
        regexUserInfoBackGroundColorSet("^.+@.+\\..+$", textFieldEmail,
                "Email skal være i formatet: xx@yy.zz");
    }//GEN-LAST:event_textFieldEmailActionPerformed

    private void textFieldAdresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAdresseActionPerformed
        // input check, Regex for address
        regexUserInfoBackGroundColorSet("^.+,\\s+\\d{4}.+$", textFieldAdresse,
                "Adresse skal være i formatet: adresse, 2938 Bynavn");
    }//GEN-LAST:event_textFieldAdresseActionPerformed

    private void textFieldNavnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNavnActionPerformed
        // input check, Regex for name
        regexUserInfoBackGroundColorSet("^\\w+(\\s\\w+)+$", textFieldNavn,
                "Navnet skal være i formatet: xxxx yyyy zzzzz");

    }//GEN-LAST:event_textFieldNavnActionPerformed

    private void textFieldAlderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAlderActionPerformed
        // input check, Regex for address
        String err = "Alder skal være et tal mellem 0 og 120 år";
        regexUserInfoBackGroundColorSet("^\\d+$", textFieldAlder,
                err);
        if (Integer.parseInt(textFieldAlder.getText()) < 0
                || Integer.parseInt(textFieldAlder.getText()) > 120) {
            textFieldAlder.setBackground(Color.red);
            displayPlainRed(err);
        } else {
            clearFormatedText(textPaneMedlemsInfo);
            textFieldAlder.setBackground(Color.white);
        }
    }//GEN-LAST:event_textFieldAlderActionPerformed

    private void menuSystemResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSystemResultsActionPerformed
        CardLayout card = (CardLayout) panelMain.getLayout();
        card.show(panelMain, "panelResults");
    }//GEN-LAST:event_menuSystemResultsActionPerformed

    private void menuSystemMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSystemMembersActionPerformed
        CardLayout card = (CardLayout) panelMain.getLayout();
        card.show(panelMain, "panelMembers");
    }//GEN-LAST:event_menuSystemMembersActionPerformed

    private void menuSystemAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSystemAccountActionPerformed
        CardLayout card = (CardLayout) panelMain.getLayout();
        card.show(panelMain, "panelAccount");
    }//GEN-LAST:event_menuSystemAccountActionPerformed

    private void buttonSearchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSearchMemberActionPerformed

    private void buttonNewMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewMemberActionPerformed
        Controller.addMember();
    }//GEN-LAST:event_buttonNewMemberActionPerformed

    private void comboBoxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxStatusActionPerformed
        if (comboBoxStatus.getSelectedItem().equals("Aktiv")) {
            comboBoxMotionistKonkurrence.setVisible(true);
            panelDisciplin.setVisible(true);
            comboBoxTrainedBy.setVisible(true);
        } else {
            comboBoxMotionistKonkurrence.setVisible(false);
            panelDisciplin.setVisible(false);
            comboBoxTrainedBy.setVisible(false);
        }
    }//GEN-LAST:event_comboBoxStatusActionPerformed

    private void checkBoxTrainerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxTrainerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxTrainerActionPerformed

    private void comboBoxTrainedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTrainedByActionPerformed

    }//GEN-LAST:event_comboBoxTrainedByActionPerformed

    private void comboBoxTrainedByMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxTrainedByMousePressed

    }//GEN-LAST:event_comboBoxTrainedByMousePressed

    private void comboBoxTrainedByFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboBoxTrainedByFocusGained
        setTrainedBy(Controller.getTrainers());
    }//GEN-LAST:event_comboBoxTrainedByFocusGained

    private boolean regexUserInfoBackGroundColorSet(String regex, JTextField tf,
            String err) {
        // check user input and set background accordingly
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(tf.getText());
        if (!matcher.matches()) {
            tf.setBackground(Color.red);
            displayFormatedText(textPaneMedlemsInfo, err, FONT_NOTOSANS_PLAIN_12, Color.RED);
            return false;
        } else {
            tf.setBackground(Color.white);
            clearFormatedText(textPaneMedlemsInfo);
            return true;
        }
    }

    @Override
    public int hashCode() {
        int hash = 7;
        return hash;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.out.println(ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DelfinGUI().setVisible(true);
                new DelfinGUI().go();
            }
        });
    }

    public void go() {
        System.out.println("getMotion: " + getMotionKonkurrence());
        System.out.println("getStatus: " + getStatus());
        setMemberPhoto(2);
        System.out.println("getMemberPhoto: " + labelMemberPhoto.getIcon().toString());
        System.out.println("getMemberPhoto: " + labelMemberPhoto.getIcon()
                .toString().split("files")[1].substring(1).split(".jpg")[0]);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonNewMember;
    private javax.swing.JButton buttonSearchMember;
    private javax.swing.JCheckBox checkBoxDisciplinBryst;
    private javax.swing.JCheckBox checkBoxDisciplinButterfly;
    private javax.swing.JCheckBox checkBoxDisciplinCrawl;
    private javax.swing.JCheckBox checkBoxDisciplinRygcrawl;
    private javax.swing.JCheckBox checkBoxTrainer;
    private javax.swing.JComboBox<String> comboBoxMotionistKonkurrence;
    private javax.swing.JComboBox<String> comboBoxStatus;
    private javax.swing.JComboBox<String> comboBoxTrainedBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDelfinIcon;
    private javax.swing.JLabel labelMemberPhoto;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileClose;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuHelpAbout;
    private javax.swing.JMenu menuSystem;
    private javax.swing.JMenuItem menuSystemAccount;
    private javax.swing.JMenuItem menuSystemMembers;
    private javax.swing.JMenuItem menuSystemResults;
    private javax.swing.JPanel panelAbout;
    private javax.swing.JPanel panelAccount;
    private javax.swing.JPanel panelDisciplin;
    private javax.swing.JPanel panelLogo;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelMedlemsData;
    private javax.swing.JPanel panelMembers;
    private javax.swing.JPanel panelResults;
    private javax.swing.JTextField textFieldAdresse;
    private javax.swing.JTextField textFieldAlder;
    private javax.swing.JTextField textFieldEmail;
    private javax.swing.JTextField textFieldID;
    private javax.swing.JTextField textFieldNavn;
    private javax.swing.JTextField textFieldTelefon;
    private javax.swing.JTextPane textPaneMedlemsInfo;
    // End of variables declaration//GEN-END:variables

    public void displayPlainBlack(String text) {
        displayFormatedText(textPaneMedlemsInfo, text, FONT_NOTOSANS_PLAIN_12, Color.black);
    }

    public void displayPlainRed(String text) {
        displayFormatedText(textPaneMedlemsInfo, text, FONT_NOTOSANS_PLAIN_12, Color.red);
    }

    public void displayBoldRed(String text) {
        displayFormatedText(textPaneMedlemsInfo, text, FONT_NOTOSANS_BOLD_12, Color.red);
    }

    public void displayBoldBlack(String text) {
        displayFormatedText(textPaneMedlemsInfo, text, FONT_NOTOSANS_BOLD_12, Color.black);
    }

    public void displayFormatedText(JTextPane tp, String txt, Font font, Color color) {

        StyledDocument doc = (StyledDocument) tp.getDocument();
        try {
            doc.insertString(doc.getLength(), txt, displayFormat(font, color));
        } catch (BadLocationException ex) {
            System.out.println(ex);
        }
    }

    public SimpleAttributeSet displayFormat(Font font, Color color) {
        SimpleAttributeSet sAS = new SimpleAttributeSet();

        StyleConstants.setFontFamily(sAS, font.getFamily());
        StyleConstants.setFontSize(sAS, font.getSize());
        StyleConstants.setBold(sAS, font.isBold());
        StyleConstants.setItalic(sAS, font.isItalic());
        StyleConstants.setForeground(sAS, color);

        return sAS;
    }

    public void clearFormatedText(JTextPane tp) {
        tp.setText("");
    }
}
